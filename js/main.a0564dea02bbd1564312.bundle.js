"use strict";(self.webpackChunkwebpack_boilerplate=self.webpackChunkwebpack_boilerplate||[]).push([[179],{478:()=>{function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},t(e)}function e(e,o){for(var r=0;r<o.length;r++){var n=o[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,i=function(e,o){if("object"!==t(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==t(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===t(i)?i:String(i)),n)}var i}const o=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.coords=e.coords,this.setOneCoord(e.coords[0]),this.props={},this.setProps(e)}var o,r;return o=t,(r=[{key:"setProps",value:function(t){this.props.color=t.color,this.props.level=+t.level,this.props.height=t.height*t.level,this.props.base_height=this.props.height}},{key:"setOneCoord",value:function(t){this.coords.push(t)}},{key:"getCoords",value:function(){return this.coords}},{key:"getProps",value:function(){return this.props}},{key:"back",get:function(){return console.log("Back Facet"),this.lat-1}},{key:"front",get:function(){return console.log("Front Facet"),this.lat+1}},{key:"left",get:function(){console.log("Left Facet")}},{key:"right",get:function(){console.log("Right Facet")}},{key:"top",get:function(){console.log("Top Facet")}},{key:"bottom",get:function(){console.log("Bottom Facet")}}])&&e(o.prototype,r),Object.defineProperty(o,"prototype",{writable:!1}),t}(),r=3,n=[[-122.416608,37.807246],[-122.416844,37.80722],[-122.416881,37.807356],[-122.416645,37.807386]];const i={getHSL:function(t,e){return"hsl("+2*e/e*t+", 50%, 50%)"},getRGB:function(t,e){var o=Math.floor((256-o)/e)*t;return"rgb(60, "+o+", 181)"}};const l={getCenterBuilding:function(t,e,o){var r=t[e][0],n=(t[e][1],t[o][0]),i=t[o][1];return{x:(r+n)/2,y:(i+i)/2}},getRadiusBuilding:function(t,e){var o=t.x-e.x,r=t.y-e.y;return Math.sqrt(Math.pow(o,2)+Math.pow(r,2))},getStreetAngle:function(){var t=-122.415683- -122.417249,e=37.807318-37.807117;return Math.atan(e/t)},getPolygonPoint:function(t,e){return{x:t[e][0],y:t[e][1]}}};var a=[];function u(t,e,o){var r=l.getCenterBuilding(n,1,3),i=2e-4,a=i,u=Math.PI/4;return u+=l.getStreetAngle(),o.radius(i,e),t>15&&(a=-2e-4/6*(t-15)+i),function(t,e,o){for(var r=[],n=0,i=Math.PI/2,l=[];n<4;n+=1){var a=i*n+o;l[0]=t.x+e*Math.cos(a),l[1]=t.y+e*Math.sin(a),r.push(l),l=[]}return r}(r,a,o.angle(u,e)*t+u)}function s(t,e){for(var n=t.from,l=t.to;n<l;n+=1){var s=new o({height:r,coords:u(n,l,e),level:n,color:i.getHSL(n,l)}),c=turf.polygon([s.getCoords()],s.getProps());a.push(c),s=null,c=null}}s({from:0,to:15},{radius:function(){return 0},angle:function(){return 0}}),s({from:15,to:21},{radius:function(t,e){return t/(2*e)},angle:function(){return 0}});var c={props:{level:1,name:"bottom",height:0,base_height:0,color:"red"},coords:[[-122.416608,37.807246],[-122.416844,37.80722],[-122.416881,37.807356],[-122.416645,37.807386],[-122.416608,37.807246]]};turf.polygon([c.coords],c.props);const p=turf.featureCollection(a);mapboxgl.accessToken="pk.eyJ1IjoiZ3J5bXlrIiwiYSI6ImNqM3JtZHl4MzAxZGkydm82eGZrNXdiNmoifQ.AJWTmNEt-6PVlX3HZyvpAg";var f=new mapboxgl.Map({style:"mapbox://styles/mapbox/light-v9",center:[-122.417608,37.807246],zoom:18,pitch:70,bearing:20,container:"map"});f.addControl(new mapboxgl.NavigationControl),f.addControl(new mapboxgl.ScaleControl({maxWidth:80,unit:"metric"})),f.on("load",(function(){f.addLayer({id:"3d-buildings",source:"composite","source-layer":"building",filter:["==","extrude","true"],type:"fill-extrusion",minzoom:15,paint:{"fill-extrusion-opacity":.6,"fill-extrusion-color":"#aaa","fill-extrusion-height":{type:"identity",property:"height"},"fill-extrusion-base":{type:"identity",property:"min_height"}}}),f.addLayer({id:"room-extrusion",type:"fill-extrusion",source:{type:"geojson",data:p},paint:{"fill-extrusion-opacity":1,"fill-extrusion-color":{property:"color",type:"identity"},"fill-extrusion-height":{property:"height",type:"identity"},"fill-extrusion-base":{property:"base_height",type:"identity"}}})}))}},t=>{t(t.s=478)}]);